package persistence.sql.ddl.query;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import persistence.sql.ddl.Person;
import persistence.sql.ddl.fixtures.EntityWithAutoIdStrategy;
import persistence.sql.ddl.fixtures.EntityWithIdentityIdStrategy;
import persistence.sql.ddl.fixtures.NullableTestEntity;
import persistence.sql.ddl.fixtures.TransientTestEntity;

import static org.assertj.core.api.Assertions.assertThat;

public class CreateQueryBuilderTest {

    @Test
    @DisplayName("Should create a CREATE TABLE query")
    public void shouldCreateCreateTableQuery() {
        CreateQueryBuilder queryBuilder = new CreateQueryBuilder();

        // When
        String query = queryBuilder.build(Person.class);

        // Then
        String expectedQuery = "CREATE TABLE users (id BIGINT GENERATED BY DEFAULT AS IDENTITY, nick_name VARCHAR(255), old INTEGER, email VARCHAR(255) NOT NULL, PRIMARY KEY (id));";
        assertThat(query).isEqualTo(expectedQuery);
    }

    @Test
    @DisplayName("Should create create table query for EntityWithAutoIdStrategy")
    public void shouldCreateCreateTableQueryForEntityWithAutoIdStrategy() {
        CreateQueryBuilder queryBuilder = new CreateQueryBuilder();

        // When
        String query = queryBuilder.build(EntityWithAutoIdStrategy.class);

        // Then
        String expectedQuery = "CREATE TABLE EntityWithAutoIdStrategy (id BIGINT , PRIMARY KEY (id));";
        assertThat(query).isEqualTo(expectedQuery);
    }

    @Test
    @DisplayName("Should create a CREATE TABLE query for EntityWithIdentityIdStrategy")
    public void shouldCreateCreateTableQueryForEntityWithIdentityIdStrategy() {
        CreateQueryBuilder queryBuilder = new CreateQueryBuilder();

        // When
        String query = queryBuilder.build(EntityWithIdentityIdStrategy.class);

        // Then
        String expectedQuery = "CREATE TABLE EntityWithIdentityIdStrategy (id BIGINT GENERATED BY DEFAULT AS IDENTITY, PRIMARY KEY (id));";
        assertThat(query).isEqualTo(expectedQuery);
    }

    @Test
    @DisplayName("Should create a CREATE TABLE query for NullableTestEntity")
    public void shouldCreateCreateTableQueryForNullableTestEntity() {
        CreateQueryBuilder queryBuilder = new CreateQueryBuilder();

        // When
        String query = queryBuilder.build(NullableTestEntity.class);

        // Then
        String expectedQuery = "CREATE TABLE NullableTestEntity (id BIGINT GENERATED BY DEFAULT AS IDENTITY, nullableColumn1 VARCHAR(255), nullableColumn2 VARCHAR(255), nonNullableColumn VARCHAR(255) NOT NULL, PRIMARY KEY (id));";
        assertThat(query).isEqualTo(expectedQuery);
    }

    @Test
    @DisplayName("Should create a CREATE TABLE query for TransientTestEntity")
    public void shouldCreateCreateTableQueryForTransientTestEntity() {
        CreateQueryBuilder queryBuilder = new CreateQueryBuilder();

        // When
        String query = queryBuilder.build(TransientTestEntity.class);

        // Then
        String expectedQuery = "CREATE TABLE TransientTestEntity (id BIGINT GENERATED BY DEFAULT AS IDENTITY, normalColumn VARCHAR(255), PRIMARY KEY (id));";
        assertThat(query).isEqualTo(expectedQuery);
    }
}
