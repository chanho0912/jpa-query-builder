package persistence.sql.ddl.definition;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import persistence.sql.Dialect;
import persistence.sql.H2Dialect;
import persistence.sql.definition.TableId;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertAll;

class TableIdTest {

    @Entity
    private static class AutoIdEntity {
        @Id
        private Long id;
    }

    @Entity
    private static class IdentityIdEntity {
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private Long id;
    }

    @Test
    @DisplayName("각 Id 전략에 맞게 query를 생성한다.")
    void shouldCreateQuery() throws Exception {
        TableId tableId1 = new TableId(AutoIdEntity.class.getDeclaredFields());
        TableId tableId2 = new TableId(IdentityIdEntity.class.getDeclaredFields());

        StringBuilder query1 = new StringBuilder();
        StringBuilder query2 = new StringBuilder();

        Dialect dialect = new H2Dialect();

        tableId1.applyToCreateQuery(query1, dialect);
        tableId2.applyToCreateQuery(query2, dialect);

        // Then
        assertAll(
            () -> assertThat(query1.toString()).isEqualTo("id BIGINT , "),
            () -> assertThat(query2.toString()).isEqualTo("id BIGINT GENERATED BY DEFAULT AS IDENTITY, ")
        );
    }
}
